@use 'sass:color';
@use 'variables';
@use 'mixins';

// Enhanced Button Styles
.btn {
  @include mixins.button-base;

  &-primary {
    @include mixins.button-primary;
  }

  &-secondary {
    @include mixins.button-secondary;
  }

  &-ghost {
    @include mixins.button-ghost;
  }

  &-success {
    @include mixins.button-base;
    background-color: variables.$success-color;
    color: variables.$white;

    &:hover:not(:disabled) {
      background-color: color.adjust(
        variables.$success-color,
        $lightness: -10%
      );
      transform: translateY(-1px);
      box-shadow: variables.$shadow-md;
    }
  }

  &-danger {
    @include mixins.button-base;
    background-color: variables.$danger-color;
    color: variables.$white;

    &:hover:not(:disabled) {
      background-color: color.adjust(variables.$danger-color, $lightness: -10%);
      transform: translateY(-1px);
      box-shadow: variables.$shadow-md;
    }
  }

  &-sm {
    padding: variables.$spacing-xs variables.$spacing-md;
    font-size: variables.$font-size-sm;
  }

  &-lg {
    padding: variables.$spacing-md variables.$spacing-xl;
    font-size: variables.$font-size-lg;
  }
}

// Enhanced Input Styles
.input {
  @include mixins.input-base;

  &-sm {
    padding: variables.$spacing-xs variables.$spacing-sm;
    font-size: variables.$font-size-sm;
  }

  &-lg {
    padding: variables.$spacing-md variables.$spacing-lg;
    font-size: variables.$font-size-lg;
  }

  &-error {
    border-color: variables.$danger-color;

    &:focus {
      border-color: variables.$danger-color;
      box-shadow: 0 0 0 3px rgba(variables.$danger-color, 0.1);
    }
  }

  &-success {
    border-color: variables.$success-color;

    &:focus {
      border-color: variables.$success-color;
      box-shadow: 0 0 0 3px rgba(variables.$success-color, 0.1);
    }
  }
}

// Card Components
.card {
  @include mixins.card-base;
  padding: variables.$spacing-lg;

  &-header {
    @include mixins.flex-between;
    margin-bottom: variables.$spacing-lg;
    padding-bottom: variables.$spacing-md;
    border-bottom: 1px solid variables.$border-light;

    .card-title {
      @include mixins.heading-3;
      margin: 0;
    }

    .card-subtitle {
      @include mixins.caption;
      color: variables.$text-muted;
      margin-top: variables.$spacing-xs;
    }
  }

  &-body {
    @include mixins.body-text;
  }

  &-footer {
    margin-top: variables.$spacing-lg;
    padding-top: variables.$spacing-md;
    border-top: 1px solid variables.$border-light;
    @include mixins.flex-between;
  }
}

// Badge Components
.badge {
  display: inline-flex;
  align-items: center;
  padding: variables.$spacing-xs variables.$spacing-sm;
  border-radius: variables.$radius-sm;
  font-size: variables.$font-size-xs;
  font-weight: variables.$font-weight-medium;
  text-transform: uppercase;
  letter-spacing: 0.05em;

  &-primary {
    background-color: rgba(variables.$primary-color, 0.1);
    color: variables.$primary-color;
  }

  &-success {
    background-color: rgba(variables.$success-color, 0.1);
    color: variables.$success-color;
  }

  &-danger {
    background-color: rgba(variables.$danger-color, 0.1);
    color: variables.$danger-color;
  }

  &-warning {
    background-color: rgba(variables.$warning-color, 0.1);
    color: variables.$warning-color;
  }

  &-info {
    background-color: rgba(variables.$info-color, 0.1);
    color: variables.$info-color;
  }
}

// Alert Components
.alert {
  padding: variables.$spacing-md;
  border-radius: variables.$radius-md;
  border: 1px solid;
  margin-bottom: variables.$spacing-md;

  &-info {
    background-color: rgba(variables.$info-color, 0.1);
    border-color: variables.$info-color;
    color: color.adjust(variables.$info-color, $lightness: -20%);
  }

  &-success {
    background-color: rgba(variables.$success-color, 0.1);
    border-color: variables.$success-color;
    color: color.adjust(variables.$success-color, $lightness: -20%);
  }

  &-warning {
    background-color: rgba(variables.$warning-color, 0.1);
    border-color: variables.$warning-color;
    color: color.adjust(variables.$warning-color, $lightness: -20%);
  }

  &-danger {
    background-color: rgba(variables.$danger-color, 0.1);
    border-color: variables.$danger-color;
    color: color.adjust(variables.$danger-color, $lightness: -20%);
  }
}

// Loading Spinner
.spinner {
  display: inline-block;
  width: 20px;
  height: 20px;
  border: 2px solid variables.$gray-300;
  border-radius: 50%;
  border-top-color: variables.$primary-color;
  animation: spin 1s ease-in-out infinite;

  &-sm {
    width: 16px;
    height: 16px;
    border-width: 1.5px;
  }

  &-lg {
    width: 32px;
    height: 32px;
    border-width: 3px;
  }
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

// Tooltip
.tooltip {
  position: relative;
  display: inline-block;

  &::after {
    content: attr(data-tooltip);
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%);
    background-color: variables.$gray-800;
    color: variables.$white;
    padding: variables.$spacing-xs variables.$spacing-sm;
    border-radius: variables.$radius-sm;
    font-size: variables.$font-size-xs;
    white-space: nowrap;
    opacity: 0;
    visibility: hidden;
    transition: all variables.$transition-normal;
    z-index: variables.$z-tooltip;
  }

  &:hover::after {
    opacity: 1;
    visibility: visible;
  }
}

// Divider
.divider {
  height: 1px;
  background-color: variables.$border-light;
  margin: variables.$spacing-md 0;

  &-vertical {
    width: 1px;
    height: auto;
    margin: 0 variables.$spacing-md;
  }
}

// Grid System
.grid {
  display: grid;
  gap: variables.$spacing-lg;

  &-cols-1 {
    grid-template-columns: repeat(1, 1fr);
  }

  &-cols-2 {
    grid-template-columns: repeat(2, 1fr);
  }

  &-cols-3 {
    grid-template-columns: repeat(3, 1fr);
  }

  &-cols-4 {
    grid-template-columns: repeat(4, 1fr);
  }

  @include mixins.mobile {
    grid-template-columns: 1fr !important;
  }
}

// Utility Classes
.text-center {
  text-align: center;
}
.text-left {
  text-align: left;
}
.text-right {
  text-align: right;
}

.text-primary {
  color: variables.$primary-color;
}
.text-success {
  color: variables.$success-color;
}
.text-danger {
  color: variables.$danger-color;
}
.text-warning {
  color: variables.$warning-color;
}
.text-muted {
  color: variables.$text-muted;
}

.bg-primary {
  background-color: variables.$primary-color;
}
.bg-success {
  background-color: variables.$success-color;
}
.bg-danger {
  background-color: variables.$danger-color;
}
.bg-warning {
  background-color: variables.$warning-color;
}
.bg-light {
  background-color: variables.$gray-100;
}

.rounded {
  border-radius: variables.$radius-md;
}
.rounded-sm {
  border-radius: variables.$radius-sm;
}
.rounded-lg {
  border-radius: variables.$radius-lg;
}
.rounded-full {
  border-radius: 9999px;
}

.shadow-sm {
  box-shadow: variables.$shadow-sm;
}
.shadow-md {
  box-shadow: variables.$shadow-md;
}
.shadow-lg {
  box-shadow: variables.$shadow-lg;
}
.shadow-xl {
  box-shadow: variables.$shadow-xl;
}

.m-0 {
  margin: 0;
}
.m-1 {
  margin: variables.$spacing-xs;
}
.m-2 {
  margin: variables.$spacing-sm;
}
.m-3 {
  margin: variables.$spacing-md;
}
.m-4 {
  margin: variables.$spacing-lg;
}
.m-5 {
  margin: variables.$spacing-xl;
}

.p-0 {
  padding: 0;
}
.p-1 {
  padding: variables.$spacing-xs;
}
.p-2 {
  padding: variables.$spacing-sm;
}
.p-3 {
  padding: variables.$spacing-md;
}
.p-4 {
  padding: variables.$spacing-lg;
}
.p-5 {
  padding: variables.$spacing-xl;
}

// Responsive utilities
@include mixins.mobile {
  .hidden-mobile {
    display: none !important;
  }
}

@include mixins.desktop {
  .hidden-desktop {
    display: none !important;
  }
}
